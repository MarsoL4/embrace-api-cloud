// <auto-generated />
using System;
using Embrace.API.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Embrace.API.Migrations
{
    [DbContext(typeof(EmbraceDbContext))]
    partial class EmbraceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.AcaoSolidaria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ESTADO");

                    b.Property<int>("MetaItens")
                        .HasColumnType("integer")
                        .HasColumnName("META_ITENS");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NOME");

                    b.Property<long>("OngId")
                        .HasColumnType("bigint")
                        .HasColumnName("ONG_ID");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("TIPO_EVENTO");

                    b.HasKey("Id");

                    b.HasIndex("OngId");

                    b.ToTable("ACOES_SOLIDARIAS", (string)null);
                });

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.Doacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AcaoSolidariaId")
                        .HasColumnType("bigint")
                        .HasColumnName("ACAO_SOLIDARIA_ID");

                    b.Property<DateTime>("DataRecebida")
                        .HasColumnType("DATE")
                        .HasColumnName("DATA_RECEBIDA");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("QUANTIDADE");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("TIPO");

                    b.HasKey("Id");

                    b.HasIndex("AcaoSolidariaId");

                    b.ToTable("DOACOES", (string)null);
                });

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.Ong", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("CNPJ");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("TELEFONE");

                    b.HasKey("Id");

                    b.ToTable("ONGS", (string)null);
                });

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.PontoDeAlimento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("integer")
                        .HasColumnName("CAPACIDADE");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("NomeLocal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NOME_LOCAL");

                    b.HasKey("Id");

                    b.ToTable("PONTOS_DE_ALIMENTO", (string)null);
                });

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.Voluntario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("TELEFONE");

                    b.HasKey("Id");

                    b.ToTable("VOLUNTARIOS", (string)null);
                });

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.VoluntarioAcao", b =>
                {
                    b.Property<long>("VoluntarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("VOLUNTARIO_ID");

                    b.Property<long>("AcaoSolidariaId")
                        .HasColumnType("bigint")
                        .HasColumnName("ACAO_SOLIDARIA_ID");

                    b.HasKey("VoluntarioId", "AcaoSolidariaId");

                    b.HasIndex("AcaoSolidariaId");

                    b.ToTable("VOLUNTARIO_ACAO", (string)null);
                });

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.AcaoSolidaria", b =>
                {
                    b.HasOne("Embrace.API.Infrastructure.Persistence.Ong", "Ong")
                        .WithMany("AcoesSolidarias")
                        .HasForeignKey("OngId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ong");
                });

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.Doacao", b =>
                {
                    b.HasOne("Embrace.API.Infrastructure.Persistence.AcaoSolidaria", "AcaoSolidaria")
                        .WithMany("Doacoes")
                        .HasForeignKey("AcaoSolidariaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AcaoSolidaria");
                });

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.VoluntarioAcao", b =>
                {
                    b.HasOne("Embrace.API.Infrastructure.Persistence.AcaoSolidaria", "AcaoSolidaria")
                        .WithMany("Voluntarios")
                        .HasForeignKey("AcaoSolidariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Embrace.API.Infrastructure.Persistence.Voluntario", "Voluntario")
                        .WithMany("Acoes")
                        .HasForeignKey("VoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcaoSolidaria");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.AcaoSolidaria", b =>
                {
                    b.Navigation("Doacoes");

                    b.Navigation("Voluntarios");
                });

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.Ong", b =>
                {
                    b.Navigation("AcoesSolidarias");
                });

            modelBuilder.Entity("Embrace.API.Infrastructure.Persistence.Voluntario", b =>
                {
                    b.Navigation("Acoes");
                });
#pragma warning restore 612, 618
        }
    }
}
